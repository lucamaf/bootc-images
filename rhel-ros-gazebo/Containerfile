FROM ghcr.io/luisarizmendi/bootc-rhel-ros:latest

# Install system dependencies
RUN dnf install -y python3-pip python3 curl git gnupg2 cmake python3-rosdep \
    https://dl.fedoraproject.org/pub/epel/epel-release-latest-$(rpm -E %rhel).noarch.rpm && \
    dnf config-manager --set-enabled codeready-builder-for-rhel-$(rpm -E %rhel)-$(arch)-rpms && \
    dnf clean all

# Create and activate Python virtual environment for build tools
RUN python3 -m venv /opt/vcs_colcon_installation
ENV PATH="/opt/vcs_colcon_installation/bin:$PATH"
RUN . /opt/vcs_colcon_installation/bin/activate && \
    pip3 install vcstool colcon-common-extensions

# Create workspace and get Gazebo sources
WORKDIR /opt/workspace
RUN mkdir -p src && \
    cd src && \
    curl -O https://raw.githubusercontent.com/gazebo-tooling/gazebodistro/master/collection-ionic.yaml && \
    . /opt/vcs_colcon_installation/bin/activate && \
    vcs import < collection-ionic.yaml

# Initialize rosdep (must be done after installing rosdep)
RUN rosdep init || echo "rosdep already initialized" && \
    rosdep update

# Install Gazebo dependencies using rosdep
WORKDIR /opt/workspace/src
RUN rosdep install -i --from-path . -y \
    --skip-keys "gz-cmake3 DART libogre-dev libogre-next-2.3-dev" \
    --os=rhel:9 || echo "Some rosdep packages may have failed, continuing with manual dependencies"

# Install additional development dependencies
RUN dnf install -y \
    boost-devel \
    eigen3-devel \
    freeimage-devel \
    protobuf-devel \
    qt5-qtbase-devel \
    tinyxml2-devel \
    urdfdom-devel \
    bullet-devel \
    libcurl-devel \
    libuuid-devel \
    gdal-devel \
    ffmpeg-devel \
    assimp-devel \
    swig \
    python3-devel && \
    # Try to install OGRE if available, otherwise continue
    dnf install -y OGRE-devel || \
    dnf install -y ogre1.9-devel || \
    echo "OGRE development package not found, Gazebo will build without OGRE rendering support"

# Build Gazebo libraries
WORKDIR /opt/workspace
RUN . /opt/vcs_colcon_installation/bin/activate && \
    colcon build --cmake-args ' -DBUILD_TESTING=OFF' --merge-install

# Set up environment for Gazebo
RUN echo '. /opt/vcs_colcon_installation/bin/activate' >> /etc/profile.d/gazebo.sh && \
    echo '. /opt/workspace/install/setup.bash' >> /etc/profile.d/gazebo.sh && \
    chmod +x /etc/profile.d/gazebo.sh

# Create a script to source the environment for users
RUN echo '#!/bin/bash' > /usr/local/bin/setup-gazebo && \
    echo '. /opt/vcs_colcon_installation/bin/activate' >> /usr/local/bin/setup-gazebo && \
    echo '. /opt/workspace/install/setup.bash' >> /usr/local/bin/setup-gazebo && \
    chmod +x /usr/local/bin/setup-gazebo

# Clean up package cache to reduce image size
RUN dnf clean all

# Set default working directory
WORKDIR /root